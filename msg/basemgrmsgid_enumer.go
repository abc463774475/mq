// Code generated by "enumer -type=BaseMgrMsgID"; DO NOT EDIT.

package msg

import (
	"fmt"
	"strings"
)

const _BaseMgrMsgIDName = "BaseMgrMsgID_StartBaseMgrMsgID_BaseRegisterBaseMgrMsgID_PlayerLogin"

var _BaseMgrMsgIDIndex = [...]uint8{0, 18, 43, 67}

const _BaseMgrMsgIDLowerName = "basemgrmsgid_startbasemgrmsgid_baseregisterbasemgrmsgid_playerlogin"

func (i BaseMgrMsgID) String() string {
	i -= 1
	if i < 0 || i >= BaseMgrMsgID(len(_BaseMgrMsgIDIndex)-1) {
		return fmt.Sprintf("BaseMgrMsgID(%d)", i+1)
	}
	return _BaseMgrMsgIDName[_BaseMgrMsgIDIndex[i]:_BaseMgrMsgIDIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _BaseMgrMsgIDNoOp() {
	var x [1]struct{}
	_ = x[BaseMgrMsgID_Start-(1)]
	_ = x[BaseMgrMsgID_BaseRegister-(2)]
	_ = x[BaseMgrMsgID_PlayerLogin-(3)]
}

var _BaseMgrMsgIDValues = []BaseMgrMsgID{BaseMgrMsgID_Start, BaseMgrMsgID_BaseRegister, BaseMgrMsgID_PlayerLogin}

var _BaseMgrMsgIDNameToValueMap = map[string]BaseMgrMsgID{
	_BaseMgrMsgIDName[0:18]:       BaseMgrMsgID_Start,
	_BaseMgrMsgIDLowerName[0:18]:  BaseMgrMsgID_Start,
	_BaseMgrMsgIDName[18:43]:      BaseMgrMsgID_BaseRegister,
	_BaseMgrMsgIDLowerName[18:43]: BaseMgrMsgID_BaseRegister,
	_BaseMgrMsgIDName[43:67]:      BaseMgrMsgID_PlayerLogin,
	_BaseMgrMsgIDLowerName[43:67]: BaseMgrMsgID_PlayerLogin,
}

var _BaseMgrMsgIDNames = []string{
	_BaseMgrMsgIDName[0:18],
	_BaseMgrMsgIDName[18:43],
	_BaseMgrMsgIDName[43:67],
}

// BaseMgrMsgIDString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func BaseMgrMsgIDString(s string) (BaseMgrMsgID, error) {
	if val, ok := _BaseMgrMsgIDNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _BaseMgrMsgIDNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to BaseMgrMsgID values", s)
}

// BaseMgrMsgIDValues returns all values of the enum
func BaseMgrMsgIDValues() []BaseMgrMsgID {
	return _BaseMgrMsgIDValues
}

// BaseMgrMsgIDStrings returns a slice of all String values of the enum
func BaseMgrMsgIDStrings() []string {
	strs := make([]string, len(_BaseMgrMsgIDNames))
	copy(strs, _BaseMgrMsgIDNames)
	return strs
}

// IsABaseMgrMsgID returns "true" if the value is listed in the enum definition. "false" otherwise
func (i BaseMgrMsgID) IsABaseMgrMsgID() bool {
	for _, v := range _BaseMgrMsgIDValues {
		if i == v {
			return true
		}
	}
	return false
}
